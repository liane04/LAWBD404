// <auto-generated />
using System;
using Marketplace.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marketplace.Migrations.Marketplace
{
    [DbContext(typeof(MarketplaceContext))]
    [Migration("20251020211406_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Marketplace.Models.Anuncio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Caixa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("CombustivelId")
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("MarcaId")
                        .HasColumnType("int");

                    b.Property<int?>("ModeloId")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("Quilometragem")
                        .HasColumnType("int");

                    b.Property<int?>("TipoId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CombustivelId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ModeloId");

                    b.HasIndex("TipoId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Anuncio");
                });

            modelBuilder.Entity("Marketplace.Models.AnuncioFav", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnuncioId")
                        .HasColumnType("int");

                    b.Property<string>("Campo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CompradorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("CompradorId");

                    b.ToTable("AnuncioFav");
                });

            modelBuilder.Entity("Marketplace.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Marketplace.Models.Combustivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Combustivel");
                });

            modelBuilder.Entity("Marketplace.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnuncioId")
                        .HasColumnType("int");

                    b.Property<int>("CompradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstadoPagamento")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("CompradorId");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("Marketplace.Models.Contactos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendedorId");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("Marketplace.Models.ContactosComprador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompradorId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CompradorId");

                    b.ToTable("ContactosComprador");
                });

            modelBuilder.Entity("Marketplace.Models.Conversa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnuncioId")
                        .HasColumnType("int");

                    b.Property<int>("CompradorId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("CompradorId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Conversa");
                });

            modelBuilder.Entity("Marketplace.Models.Denuncia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdministradorId")
                        .HasColumnType("int");

                    b.Property<int>("CompradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDeDenuncia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEncerramento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Estado")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("AdministradorId");

                    b.HasIndex("CompradorId");

                    b.ToTable("Denuncia");

                    b.HasDiscriminator().HasValue("Denuncia");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Marketplace.Models.FiltrosFav", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompradorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompradorId");

                    b.ToTable("FiltrosFav");
                });

            modelBuilder.Entity("Marketplace.Models.HistoricoAcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdministradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Motivo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TipoAcao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AdministradorId");

                    b.ToTable("HistoricoAcao");

                    b.HasDiscriminator().HasValue("HistoricoAcao");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Marketplace.Models.Imagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnuncioId")
                        .HasColumnType("int");

                    b.Property<string>("ImagemCaminho")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.ToTable("Imagem");
                });

            modelBuilder.Entity("Marketplace.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("Marketplace.Models.MarcasFav", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompradorId")
                        .HasColumnType("int");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompradorId");

                    b.HasIndex("MarcaId");

                    b.ToTable("MarcasFav");
                });

            modelBuilder.Entity("Marketplace.Models.Mensagens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("ConversaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ConversaId");

                    b.ToTable("Mensagens");
                });

            modelBuilder.Entity("Marketplace.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("TipoId");

                    b.ToTable("Modelo");
                });

            modelBuilder.Entity("Marketplace.Models.Morada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Morada");
                });

            modelBuilder.Entity("Marketplace.Models.Notificacoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnuncioFavId")
                        .HasColumnType("int");

                    b.Property<int>("CompradorId")
                        .HasColumnType("int");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiltrosFavId")
                        .HasColumnType("int");

                    b.Property<int?>("MarcasFavId")
                        .HasColumnType("int");

                    b.Property<int?>("PesquisasPassadasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioFavId");

                    b.HasIndex("CompradorId");

                    b.HasIndex("FiltrosFavId");

                    b.HasIndex("MarcasFavId");

                    b.HasIndex("PesquisasPassadasId");

                    b.ToTable("Notificacoes");
                });

            modelBuilder.Entity("Marketplace.Models.PesquisasPassadas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompradorId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompradorId");

                    b.ToTable("PesquisasPassadas");
                });

            modelBuilder.Entity("Marketplace.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnuncioId")
                        .HasColumnType("int");

                    b.Property<int>("CompradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("CompradorId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("Marketplace.Models.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tipo");
                });

            modelBuilder.Entity("Marketplace.Models.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Estado")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("MoradaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("MoradaId");

                    b.ToTable("Utilizador");

                    b.HasDiscriminator().HasValue("Utilizador");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Marketplace.Models.Visita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ReservaId")
                        .HasColumnType("int");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Visita");
                });

            modelBuilder.Entity("Marketplace.Models.DenunciaAnuncio", b =>
                {
                    b.HasBaseType("Marketplace.Models.Denuncia");

                    b.Property<int>("AnuncioId")
                        .HasColumnType("int");

                    b.Property<int?>("VendedorId")
                        .HasColumnType("int");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("VendedorId");

                    b.HasDiscriminator().HasValue("DenunciaAnuncio");
                });

            modelBuilder.Entity("Marketplace.Models.DenunciaUser", b =>
                {
                    b.HasBaseType("Marketplace.Models.Denuncia");

                    b.Property<int>("UtilizadorAlvoId")
                        .HasColumnType("int");

                    b.HasIndex("UtilizadorAlvoId");

                    b.HasDiscriminator().HasValue("DenunciaUser");
                });

            modelBuilder.Entity("Marketplace.Models.AcaoAnuncio", b =>
                {
                    b.HasBaseType("Marketplace.Models.HistoricoAcao");

                    b.Property<int>("AnuncioId")
                        .HasColumnType("int");

                    b.HasIndex("AnuncioId");

                    b.HasDiscriminator().HasValue("AcaoAnuncio");
                });

            modelBuilder.Entity("Marketplace.Models.AcaoUser", b =>
                {
                    b.HasBaseType("Marketplace.Models.HistoricoAcao");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int");

                    b.HasIndex("UtilizadorId");

                    b.HasDiscriminator().HasValue("AcaoUser");
                });

            modelBuilder.Entity("Marketplace.Models.Administrador", b =>
                {
                    b.HasBaseType("Marketplace.Models.Utilizador");

                    b.Property<string>("NivelAcesso")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("Marketplace.Models.Comprador", b =>
                {
                    b.HasBaseType("Marketplace.Models.Utilizador");

                    b.Property<string>("Preferencias")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasDiscriminator().HasValue("Comprador");
                });

            modelBuilder.Entity("Marketplace.Models.Vendedor", b =>
                {
                    b.HasBaseType("Marketplace.Models.Utilizador");

                    b.Property<string>("DadosFaturacao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nif")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasDiscriminator().HasValue("Vendedor");
                });

            modelBuilder.Entity("Marketplace.Models.Anuncio", b =>
                {
                    b.HasOne("Marketplace.Models.Categoria", "Categoria")
                        .WithMany("Anuncios")
                        .HasForeignKey("CategoriaId");

                    b.HasOne("Marketplace.Models.Combustivel", "Combustivel")
                        .WithMany("Anuncios")
                        .HasForeignKey("CombustivelId");

                    b.HasOne("Marketplace.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.HasOne("Marketplace.Models.Modelo", "Modelo")
                        .WithMany("Anuncios")
                        .HasForeignKey("ModeloId");

                    b.HasOne("Marketplace.Models.Tipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId");

                    b.HasOne("Marketplace.Models.Vendedor", "Vendedor")
                        .WithMany("Anuncios")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Combustivel");

                    b.Navigation("Marca");

                    b.Navigation("Modelo");

                    b.Navigation("Tipo");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("Marketplace.Models.AnuncioFav", b =>
                {
                    b.HasOne("Marketplace.Models.Anuncio", "Anuncio")
                        .WithMany()
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Models.Comprador", "Comprador")
                        .WithMany("AnunciosFavoritos")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anuncio");

                    b.Navigation("Comprador");
                });

            modelBuilder.Entity("Marketplace.Models.Compra", b =>
                {
                    b.HasOne("Marketplace.Models.Anuncio", "Anuncio")
                        .WithMany("Compras")
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Models.Comprador", "Comprador")
                        .WithMany("Compras")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anuncio");

                    b.Navigation("Comprador");
                });

            modelBuilder.Entity("Marketplace.Models.Contactos", b =>
                {
                    b.HasOne("Marketplace.Models.Vendedor", "Vendedor")
                        .WithMany("Contactos")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("Marketplace.Models.ContactosComprador", b =>
                {
                    b.HasOne("Marketplace.Models.Comprador", "Comprador")
                        .WithMany("Contactos")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comprador");
                });

            modelBuilder.Entity("Marketplace.Models.Conversa", b =>
                {
                    b.HasOne("Marketplace.Models.Anuncio", "Anuncio")
                        .WithMany("Conversas")
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Models.Comprador", "Comprador")
                        .WithMany("Conversas")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Models.Vendedor", "Vendedor")
                        .WithMany("Conversas")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anuncio");

                    b.Navigation("Comprador");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("Marketplace.Models.Denuncia", b =>
                {
                    b.HasOne("Marketplace.Models.Administrador", "Administrador")
                        .WithMany("DenunciasGeridas")
                        .HasForeignKey("AdministradorId");

                    b.HasOne("Marketplace.Models.Comprador", "Comprador")
                        .WithMany("Denuncias")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");

                    b.Navigation("Comprador");
                });

            modelBuilder.Entity("Marketplace.Models.FiltrosFav", b =>
                {
                    b.HasOne("Marketplace.Models.Comprador", "Comprador")
                        .WithMany("FiltrosFavoritos")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comprador");
                });

            modelBuilder.Entity("Marketplace.Models.HistoricoAcao", b =>
                {
                    b.HasOne("Marketplace.Models.Administrador", "Administrador")
                        .WithMany("HistoricoAcoes")
                        .HasForeignKey("AdministradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("Marketplace.Models.Imagem", b =>
                {
                    b.HasOne("Marketplace.Models.Anuncio", "Anuncio")
                        .WithMany("Imagens")
                        .HasForeignKey("AnuncioId");

                    b.Navigation("Anuncio");
                });

            modelBuilder.Entity("Marketplace.Models.MarcasFav", b =>
                {
                    b.HasOne("Marketplace.Models.Comprador", "Comprador")
                        .WithMany("MarcasFavoritas")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comprador");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Marketplace.Models.Mensagens", b =>
                {
                    b.HasOne("Marketplace.Models.Conversa", "Conversa")
                        .WithMany("Mensagens")
                        .HasForeignKey("ConversaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversa");
                });

            modelBuilder.Entity("Marketplace.Models.Modelo", b =>
                {
                    b.HasOne("Marketplace.Models.Marca", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Models.Tipo", "Tipo")
                        .WithMany("Modelos")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Marketplace.Models.Notificacoes", b =>
                {
                    b.HasOne("Marketplace.Models.AnuncioFav", "AnuncioFav")
                        .WithMany("Notificacoes")
                        .HasForeignKey("AnuncioFavId");

                    b.HasOne("Marketplace.Models.Comprador", "Comprador")
                        .WithMany("Notificacoes")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Models.FiltrosFav", "FiltrosFav")
                        .WithMany("Notificacoes")
                        .HasForeignKey("FiltrosFavId");

                    b.HasOne("Marketplace.Models.MarcasFav", "MarcasFav")
                        .WithMany("Notificacoes")
                        .HasForeignKey("MarcasFavId");

                    b.HasOne("Marketplace.Models.PesquisasPassadas", "PesquisasPassadas")
                        .WithMany("Notificacoes")
                        .HasForeignKey("PesquisasPassadasId");

                    b.Navigation("AnuncioFav");

                    b.Navigation("Comprador");

                    b.Navigation("FiltrosFav");

                    b.Navigation("MarcasFav");

                    b.Navigation("PesquisasPassadas");
                });

            modelBuilder.Entity("Marketplace.Models.PesquisasPassadas", b =>
                {
                    b.HasOne("Marketplace.Models.Comprador", "Comprador")
                        .WithMany("PesquisasPassadas")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comprador");
                });

            modelBuilder.Entity("Marketplace.Models.Reserva", b =>
                {
                    b.HasOne("Marketplace.Models.Anuncio", "Anuncio")
                        .WithMany("Reservas")
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Models.Comprador", "Comprador")
                        .WithMany("Reservas")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anuncio");

                    b.Navigation("Comprador");
                });

            modelBuilder.Entity("Marketplace.Models.Utilizador", b =>
                {
                    b.HasOne("Marketplace.Models.Morada", "Morada")
                        .WithMany("Utilizadores")
                        .HasForeignKey("MoradaId");

                    b.Navigation("Morada");
                });

            modelBuilder.Entity("Marketplace.Models.Visita", b =>
                {
                    b.HasOne("Marketplace.Models.Reserva", "Reserva")
                        .WithMany("Visitas")
                        .HasForeignKey("ReservaId");

                    b.HasOne("Marketplace.Models.Vendedor", "Vendedor")
                        .WithMany("Visitas")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("Marketplace.Models.DenunciaAnuncio", b =>
                {
                    b.HasOne("Marketplace.Models.Anuncio", "Anuncio")
                        .WithMany("Denuncias")
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Models.Vendedor", "Vendedor")
                        .WithMany("DenunciasRespondidas")
                        .HasForeignKey("VendedorId");

                    b.Navigation("Anuncio");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("Marketplace.Models.DenunciaUser", b =>
                {
                    b.HasOne("Marketplace.Models.Utilizador", "UtilizadorAlvo")
                        .WithMany("DenunciasRecebidas")
                        .HasForeignKey("UtilizadorAlvoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UtilizadorAlvo");
                });

            modelBuilder.Entity("Marketplace.Models.AcaoAnuncio", b =>
                {
                    b.HasOne("Marketplace.Models.Anuncio", "Anuncio")
                        .WithMany("AcoesAnuncio")
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anuncio");
                });

            modelBuilder.Entity("Marketplace.Models.AcaoUser", b =>
                {
                    b.HasOne("Marketplace.Models.Utilizador", "Utilizador")
                        .WithMany("AcoesUser")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("Marketplace.Models.Anuncio", b =>
                {
                    b.Navigation("AcoesAnuncio");

                    b.Navigation("Compras");

                    b.Navigation("Conversas");

                    b.Navigation("Denuncias");

                    b.Navigation("Imagens");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Marketplace.Models.AnuncioFav", b =>
                {
                    b.Navigation("Notificacoes");
                });

            modelBuilder.Entity("Marketplace.Models.Categoria", b =>
                {
                    b.Navigation("Anuncios");
                });

            modelBuilder.Entity("Marketplace.Models.Combustivel", b =>
                {
                    b.Navigation("Anuncios");
                });

            modelBuilder.Entity("Marketplace.Models.Conversa", b =>
                {
                    b.Navigation("Mensagens");
                });

            modelBuilder.Entity("Marketplace.Models.FiltrosFav", b =>
                {
                    b.Navigation("Notificacoes");
                });

            modelBuilder.Entity("Marketplace.Models.Marca", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("Marketplace.Models.MarcasFav", b =>
                {
                    b.Navigation("Notificacoes");
                });

            modelBuilder.Entity("Marketplace.Models.Modelo", b =>
                {
                    b.Navigation("Anuncios");
                });

            modelBuilder.Entity("Marketplace.Models.Morada", b =>
                {
                    b.Navigation("Utilizadores");
                });

            modelBuilder.Entity("Marketplace.Models.PesquisasPassadas", b =>
                {
                    b.Navigation("Notificacoes");
                });

            modelBuilder.Entity("Marketplace.Models.Reserva", b =>
                {
                    b.Navigation("Visitas");
                });

            modelBuilder.Entity("Marketplace.Models.Tipo", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("Marketplace.Models.Utilizador", b =>
                {
                    b.Navigation("AcoesUser");

                    b.Navigation("DenunciasRecebidas");
                });

            modelBuilder.Entity("Marketplace.Models.Administrador", b =>
                {
                    b.Navigation("DenunciasGeridas");

                    b.Navigation("HistoricoAcoes");
                });

            modelBuilder.Entity("Marketplace.Models.Comprador", b =>
                {
                    b.Navigation("AnunciosFavoritos");

                    b.Navigation("Compras");

                    b.Navigation("Contactos");

                    b.Navigation("Conversas");

                    b.Navigation("Denuncias");

                    b.Navigation("FiltrosFavoritos");

                    b.Navigation("MarcasFavoritas");

                    b.Navigation("Notificacoes");

                    b.Navigation("PesquisasPassadas");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Marketplace.Models.Vendedor", b =>
                {
                    b.Navigation("Anuncios");

                    b.Navigation("Contactos");

                    b.Navigation("Conversas");

                    b.Navigation("DenunciasRespondidas");

                    b.Navigation("Visitas");
                });
#pragma warning restore 612, 618
        }
    }
}
